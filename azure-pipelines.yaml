# trigger:
# - main

# pool:
#   name: elad-pc

# variables:
#   azureServiceConnection: 'elad-service-connect'
#   resourceGroup: 'elad-rg'
#   location: 'eastus'
#   storageTemplate: 'storage-template.json'
#   vmTemplate: 'vm-template.json'
#   publicIpName: 'elad-public-ip'

# stages:
# - stage: Deploy_Resources
#   displayName: Deploy Storage Accounts & VM
#   jobs:
#   - job: Deploy
#     displayName: Deploy Storage and VM
#     steps:

#     - task: AzureCLI@2
#       displayName: "Login to Azure"
#       inputs:
#         azureSubscription: $(azureServiceConnection)
#         scriptType: pscore
#         scriptLocation: inlineScript
#         inlineScript: |
#           az account show  # Verify Azure authentication

#     - task: AzureCLI@2
#       displayName: "Deploy Storage Accounts"
#       inputs:
#         azureSubscription: $(azureServiceConnection)
#         scriptType: pscore
#         scriptLocation: inlineScript
#         inlineScript: |
#           az deployment group create --resource-group $(resourceGroup) `
#           --template-file $(storageTemplate) `
#           --parameters storageAccount1Name=eladstorageacct12345 storageAccount2Name=eladstorageacct67890 location=$(location)

#     - task: AzureCLI@2
#       displayName: "Deploy Virtual Machine"
#       inputs:
#         azureSubscription: $(azureServiceConnection)
#         scriptType: pscore
#         scriptLocation: inlineScript
#         inlineScript: |
#           az deployment group create --resource-group $(resourceGroup) `
#           --template-file $(vmTemplate) `
#           --parameters vmName=myVM adminUsername=azureUser adminPassword='P@ssw0rd!' `
#                        networkInterfaceName=myVMnic publicIpName=$(publicIpName) `
#                        vnetName=elad-vnet subnetName=elad-subnet location=$(location)


trigger:
- main

pool:
  name: elad-pc

variables:
  azureServiceConnection: 'elad-service-connect'
  resourceGroup: 'elad-rg'
  location: 'eastus'
  storageTemplate: 'storage-template.json'
  vmTemplate: 'vm-template.json'
  publicIpName: 'elad-public-ip'
  vmUser: 'azureUser'  # Change if needed
  vmPublicIp: 'YOUR_VM_PUBLIC_IP'  # Replace with the actual VM public IP

stages:
- stage: Deploy_Resources
  displayName: Deploy Storage Accounts & VM
  jobs:
  - job: Deploy
    displayName: Deploy Storage and VM
    steps:
    
    - task: AzureCLI@2
      displayName: "Login to Azure"
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          az account show  # Verify Azure authentication

    - task: AzureCLI@2
      displayName: "Deploy Storage Accounts"
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroup) `
          --template-file $(storageTemplate) `
          --parameters storageAccount1Name=eladstorageacct12345 storageAccount2Name=eladstorageacct67890 location=$(location)

    - task: AzureCLI@2
      displayName: "Deploy Virtual Machine"
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          az deployment group create --resource-group $(resourceGroup) `
          --template-file $(vmTemplate) `
          --parameters vmName=myVM adminUsername=$(vmUser) adminPassword='P@ssw0rd!' `
                       networkInterfaceName=myVMnic publicIpName=$(publicIpName) `
                       vnetName=elad-vnet subnetName=elad-subnet location=$(location)

- stage: Execute_Blob_Copy
  displayName: Execute Blob Copy Script on VM
  dependsOn: Deploy_Resources
  jobs:
  - job: RunBlobCopy
    displayName: Run Blob Copy Script on Azure VM
    steps:

    - task: SSH@0
      displayName: "Run Blob Copy Script on VM"
      inputs:
        sshEndpoint: "AzureVM-SSH"  # Configure this in Azure DevOps Service Connections
        runOptions: "inline"
        inline: |
          echo "Connecting to Azure VM..."
          python3 -m pip install --upgrade pip
          pip3 install azure-storage-blob python-dotenv
          echo "Executing blobs.py..."
          python3 /home/$(vmUser)/blobs.py
